#uix_alertsMenuPanel .alert,
.js-alertTabPanel .uix_canvasPanelBody .alert,
.js-alertsMenuBody .alert,
.alert-list .alert 
{
	<xf:if is="property('svIncludeStockStylingForAlerts')">
	<xf:if is="property('svStyleJustReadAsUnread')">
		&.is-recently-read.is-just-read,
	</xf:if>
		&.is-unread
		{
			.xf-contentHighlightBase();
			&:first-child
			{
				border-radius: initial;
			}
		}

		&.is-read
		{
			.xf-contentAltBase();
		}

		&.is-recently-read
		{
			.xf-contentAltBase();
		}
	</xf:if>
	<xf:if is="property('svStyleJustReadAsUnread')">
	&.is-recently-read.is-just-read,
	</xf:if>
	&.is-unread
	{
		.xf-svUnreadAlerts();
	}

	&.is-read
	{
		.xf-svReadAlerts();
	}

	&.is-recently-read
	{
		.xf-svRecentlyReadAlerts();
	}

	.contentRow-figure--selector
	{
		display: inline-flex;
		justify-content: center;
		align-items: center;

		.iconic
		{
			width: initial;
		}
	}
}

.alert
{
	<xf:if is="property('svAlertImprovUnreadAlertFlag')">
	.unread-indicator-icon
	{
		color: @xf-svAlertImprovUnreadAlertIconColor;
	}
	</xf:if>
	<xf:if is="property('svAlertImprovRecentAlertFlag')">
	.recent-indicator-icon
	{
		color: @xf-svAlertImprovRecentAlertIconColor;
	}
	</xf:if>
	.contentRow-figure
	{
		&--selector
		{
			width: 2rem;

			+ .contentRow-figure
			{
				margin-left: 0.5rem;
			}
		}

		&--user.flex
		{
			display:flex;
			flex-direction: column;
			flex-wrap: wrap;
			justify-content: space-between;
		}
	}

	.react-summary
	{
		&--alert
		{
			display: inline-block;
		}
		&--count
		{
			white-space: pre-wrap;
		}
	}

	.alert-list &--mark-unread,
	.alert-list &--mark-read
	{
		float:right;
	}
	.alert-list & li.mark-read:before
	{
		content:"";
	}
}

.buttonGroup.alerts-filter .button {
    min-width:0;
}
.js-alertsMenuBody .menu-row.alert--read-unread-seperator
{
	.xf-svUnreadAlertsSeperator();
}